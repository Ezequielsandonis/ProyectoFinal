@using System.Linq;
@using X.PagedList;
@model IPagedList<Usuario>

@*Esta vista usa paginación*@
@{
    ViewData["title"] = "Lista de usuarios";
}

@*Validar que no haya errores*@
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
    </div>
}

<div class="container py-5">
    <h1>@ViewData["Title"]</h1>
    <p>
        <a asp-action="Create" class="btn btn-primary text-white">Crear nuevo usuario</a>
    </p>

    @*Formulario de cuadro de búsqueda*@
    <form asp-controller="AdminUsuario" asp-action="Index" method="get">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Buscar por correo o nombre de usuario:" name="buscar" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-outline-secondary">Buscar</button>
            </div>
        </div>
    </form>

    @*Validar y evitar errores*@
    @if (Model.Count > 0)
    {
        @*Mostrar usuarios en una tabla*@
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Nombre de usuario</th>
                        <th>Correo</th>
                        <th>Rol</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usuario in Model)
                    {
                        <tr>
                            <td>@usuario.NombreUsuario</td>
                            <td>@usuario.Correo</td>
                            <td>
                                @if (ViewBag.Roles != null)
                                {
                                    var rol = ((List<SelectListItem>)ViewBag.Roles).FirstOrDefault(r => r.Value == usuario.RolId.ToString());
                                    @if (rol != null)
                                    {
                                        @rol.Value
                                    }
                                }
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@usuario.UsuarioId" class="btn btn-sm btn-warning">Editar</a>
                                <a asp-action="Delete" asp-route-id="@usuario.UsuarioId" class="btn btn-sm btn-danger">Eliminar</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @*Paginación*@
        <div class="d-flex justify-content-center mt-4">
            <nav>
                <ul class="pagination">
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { pagina = Model.PageNumber - 1, buscar = ViewData["buscar"] })" aria-label="Previus">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { pagina = i, buscar = ViewData["buscar"] })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { pagina = Model.PageNumber + 1, buscar = ViewData["buscar"] })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
    else
    {
        <p>No se encontró ningún usuario</p>
    }
</div>
